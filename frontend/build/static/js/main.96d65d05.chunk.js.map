{"version":3,"sources":["Components/Navbar.js","Pages/Home.js","Pages/DoctorLogin.js","Pages/PatientLogin.js","Pages/PatientSignup.js","Pages/DoctorSearch.js","Pages/AvailabilityEntry.js","Pages/SearchResults.js","Pages/CheckBookings.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","React","createElement","className","src","alt","style","height","color","fontSize","Home","navigate","useNavigate","backgroundImage","backgroundAttachment","backgroundSize","backgroundPosition","onClick","handleDoctorLogin","handlePatientLogin","DoctorLogin","phone","setPhone","useState","password","setPassword","onSubmit","async","e","preventDefault","response","axios","post","data","success","doctor_id","doctor_name","localStorage","setItem","alert","message","error","console","type","placeholder","value","onChange","target","required","PatientLogin","loading","setLoading","patient_name","disabled","href","PatientSignup","name","setName","age","setAge","DoctorSearch","patientName","setPatientName","locality","setLocality","date","setDate","doctorType","setDoctorType","useEffect","storedName","getItem","backgroundColor","padding","textAlign","display","flexDirection","alignItems","marginTop","borderRadius","width","maxWidth","boxShadow","marginBottom","border","handleSearch","state","cursor","AvailabilityEntry","doctorId","setDoctorId","locationName","setLocationName","address","setAddress","startTime","setStartTime","availableSlots","setAvailableSlots","availableDate","setAvailableDate","availabilityData","location_name","available_date","start_time","available_slots","window","location","reload","min","max","margin","handleLogout","handleCheckBookings","SearchResults","doctors","setDoctors","useLocation","fetchDoctors","useCallback","justifyContent","fontWeight","clear","length","map","doctor","key","borderBottom","specialization","consultation_fees","nearest_metro_station","distance","Date","toLocaleDateString","marginLeft","alignSelf","log","handleBookDoctor","CheckBookings","bookings","setBookings","noBookingsFound","setNoBookingsFound","borderCollapse","booking","index","handleGoBack","App","BrowserRouter","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.96d65d05.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport \"./Navbar.css\"; // Import the CSS file\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      {/* Logo */}\n      <div className=\"logo\">\n        <img src=\"/Logo.avif\" alt=\"DoctorHunt Logo\" style={{ height: \"65px\" }} />\n      </div>\n      {/* Heading Text */}\n      <div className=\"navbar-heading\">\n        <h1 style={{ color: \"white\", fontSize: \"2rem\" }}>Welcome to DoctorHunt</h1>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"../Components/Navbar\";\nimport \"./Home.css\"; // Custom CSS for styling\n\nconst Home = () => {\n  const navigate = useNavigate();\n\n  // Function to navigate to Doctor Login\n  const handleDoctorLogin = () => {\n    navigate(\"/doctor-login\");\n  };\n\n  // Function to navigate to Patient Login\n  const handlePatientLogin = () => {\n    navigate(\"/patient-login\");\n  };\n\n  return (\n    <div\n      className=\"min-h-screen bg-cover bg-center\"\n      style={{\n        backgroundImage: \"url('/HomepageBackground.jpg')\", // Background image\n        backgroundAttachment: \"fixed\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        height: \"100vh\",\n      }}\n    >\n      <Navbar />\n      <div className=\"flex items-center justify-center h-[60vh]\">\n        <div className=\"text-center text-white\">\n          <h2 className=\"text-5xl font-bold mb-6\">Welcome to DoctorHunt</h2>\n        </div>\n      </div>\n\n      <div className=\"flex justify-center space-x-10 mt-12 mb-10\">\n        {/* Doctor Features Section */}\n        <div className=\"feature-box bg-white p-6 rounded-lg shadow-xl w-full max-w-lg\">\n          <h3 className=\"text-3xl font-bold mb-4\">Hello Doctor!!</h3>\n          <ul className=\"text-lg\">\n            <li>Set Your Availability: Doctors can choose when they're available and how many slots to offer.</li>\n            <li>Manage Appointments: Doctors can easily see and manage their appointments with patients.</li>\n            <li>Booking History: Doctors can view past and future appointments in one place.</li>\n          </ul>\n          {/* Doctor Login Button */}\n          <button\n            className=\"login-button\"\n            onClick={handleDoctorLogin} // Navigate to Doctor Login page\n          >\n            Doctor Login\n          </button>\n        </div>\n\n        {/* Patient Features Section */}\n        <div className=\"feature-box bg-white p-6 rounded-lg shadow-xl w-full max-w-lg\">\n          <h3 className=\"text-3xl font-bold mb-4\">Hello Patient!!</h3>\n          <ul className=\"text-lg\">\n            <li>Search for Doctors: Patients can find doctors by specialty, location, and available times.</li>\n            <li>Book Appointments Online: Patients can book appointments with doctors directly through the website.</li>\n            <li>Secure Login: Patients can safely create accounts and log in to book appointments.</li>\n          </ul>\n          {/* Patient Login Button */}\n          <button\n            className=\"login-button\"\n            onClick={handlePatientLogin} // Navigate to Patient Login page\n          >\n            Patient Login\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios for API calls\nimport \"./DoctorLogin.css\"; // Import CSS for styling\n\nconst DoctorLogin = () => {\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n   \n    if (!phone || !password) {\n      alert(\"Please fill in both fields\");\n      return;\n    }\n\n    // try {\n     \n    //   const response = await axios.post(\"http://localhost:5001/api/doctor/login\", {\n    //     phone,\n    //     password\n    //   });\n    try {\n      const response = await axios.post(\n        \"http://35.226.73.163:80/api/doctor/login\", // Update with the correct external IP\n        {\n          phone,\n          password,\n        }\n      );\n      // If login is successful, store doctor details in localStorage and navigate\n      if (response.data.success) {\n        const { doctor_id, doctor_name } = response.data;\n        \n        if (doctor_id && doctor_name) {\n          localStorage.setItem(\"doctor_id\", doctor_id); // Store doctor ID\n          localStorage.setItem(\"doctor_name\", doctor_name); // Store doctor name\n\n          alert(response.data.message); // Show success message\n          navigate(\"/availability-entry\"); // Redirect to AvailabilityEntry page\n        } else {\n          alert(\"Doctor details are missing. Please contact support.\");\n        }\n      } else {\n        alert(response.data.message); // Display login failure message\n      }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      alert(\"Something went wrong. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"doctor-login-container\">\n      <div className=\"login-box\">\n        <h2>Welcome, Doctor</h2>\n        <form onSubmit={handleLogin}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your phone number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Login</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorLogin;\n","// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import \"./PatientAuth.css\"; // Shared CSS for login & signup\n\n// const PatientLogin = () => {\n//   const [phone, setPhone] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();  // Initialize useNavigate hook\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     setLoading(true);\n\n//     if (!phone || !password) {\n//       alert(\"Please fill in both fields.\");\n//       setLoading(false);\n//       return;\n//     }\n\n//     try {\n//       const response = await axios.post(\"http://localhost:5000/api/patients/login\", {\n//         phone,\n//         password,\n//       });\n\n//       if (response.data.success) {\n//         // Check if the redirection works\n//         navigate(\"/doctor-search\");  // Redirect to doctor search page\n//       } else {\n//         alert(\"Invalid phone number or password\");\n//       }\n//     } catch (error) {\n//       console.error(\"Login failed\", error);\n//       alert(\"Something went wrong! Please try again later.\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"auth-container\">\n//       <div className=\"auth-box\">\n//         <h2>Patient Login</h2>\n//         <form onSubmit={handleLogin}>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Enter your phone number\"\n//             value={phone}\n//             onChange={(e) => setPhone(e.target.value)}\n//             required\n//           />\n//           <input\n//             type=\"password\"\n//             placeholder=\"Enter your password\"\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             required\n//           />\n//           <button type=\"submit\" disabled={loading}>\n//             {loading ? \"Logging in...\" : \"Login\"}\n//           </button>\n//         </form>\n//         <p>New here? <a href=\"/patient-signup\">Sign up</a></p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default PatientLogin;\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./PatientAuth.css\"; // Shared CSS for login & signup\n\nconst PatientLogin = () => {\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();  // Initialize useNavigate hook\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n  \n    if (!phone || !password) {\n      alert(\"Please fill in both fields.\");\n      setLoading(false);\n      return;\n    }\n  \n    // try {\n    //   const response = await axios.post(\"http://localhost:5004/api/patients/login\", {\n    //     phone,\n    //     password,\n    //   });\n    try {\n      const response = await axios.post(\n        \"http://34.132.87.22:80/api/patients/login\", // Update with the correct external IP\n        {\n          phone,\n          password,\n        }\n      );\n    \n    \n  \n      if (response.data.success) {\n        // Store the patient's name and other details in localStorage\n        localStorage.setItem(\"patient_name\", response.data.patient_name); // Save patient name\n        localStorage.setItem(\"patient_phone\", phone);  // Optionally save phone number too\n  \n        navigate(\"/doctor-search\"); // Redirect to doctor search page\n      } else {\n        alert(\"Invalid phone number or password\");\n      }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      alert(\"Something went wrong! Please try again later.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2>Patient Login</h2>\n        <form onSubmit={handleLogin}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your phone number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\" disabled={loading}>\n            {loading ? \"Logging in...\" : \"Login\"}\n          </button>\n        </form>\n        <p>New here? <a href=\"/patient-signup\">Sign up</a></p>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientLogin;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./PatientAuth.css\"; // Shared CSS for login & signup\n\nconst PatientSignup = () => {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSignup = async (e) => {\n    e.preventDefault();\n    // try {\n    //   const response = await axios.post(\"http://localhost:5004/api/patients/signup\", {\n    //     name,\n    //     age,\n    //     phone,\n    //     password\n    //   });\n    try {\n      const response = await axios.post(\n        \"http://34.132.87.22:80/api/patients/signup\", // Update with the correct external IP\n        {\n          name,\n          age,\n          phone,\n          password,\n        }\n      );\n      if (response.data.success) {\n        alert(\"Signup successful! Please login.\");\n        navigate(\"/patient-login\"); // Redirect to login page\n      } else {\n        alert(\"Signup failed. Try again.\");\n      }\n    } catch (error) {\n      console.error(\"Signup failed\", error);\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2>Patient Signup</h2>\n        <form onSubmit={handleSignup}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter your name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Enter your age\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n            required\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Enter your phone number\"\n            value={phone}\n            onChange={(e) => setPhone(e.target.value)}\n            required\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Enter your password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\">Sign Up</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSignup;\n","\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst DoctorSearch = () => {\n  const [patientName, setPatientName] = useState(null);\n  const [locality, setLocality] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [doctorType, setDoctorType] = useState(\"\");\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Get the patient name from localStorage\n    const storedName = localStorage.getItem(\"patient_name\");\n\n    if (storedName) {\n      setPatientName(storedName);  // Set the patient's name to the state\n    }\n  }, []);\n\n  const handleSearch = () => {\n    // Redirect to a new page after search is clicked (you can design this page later)\n    navigate(\"/search-results\", { state: { locality, date, doctorType } });\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor: \"#28a745\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          textAlign: \"center\",\n        }}\n      >\n        {patientName ? (\n          <h2>Hello, {patientName}!</h2>\n        ) : (\n          <h2>Please log in to view your details.</h2>\n        )}\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          marginTop: \"50px\",\n        }}\n      >\n        <div\n          style={{\n            padding: \"20px\",\n            backgroundColor: \"#f9f9f9\",\n            borderRadius: \"10px\",\n            width: \"80%\",\n            maxWidth: \"600px\",\n            boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n          }}\n        >\n          <h3>Search for a Doctor</h3>\n\n          <label style={{ marginBottom: \"10px\" }}>Which doctor do you want to search for?</label>\n\n          <select\n            value={locality}\n            onChange={(e) => setLocality(e.target.value)}\n            style={{\n              padding: \"10px\",\n              marginBottom: \"20px\",\n              width: \"100%\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\",\n            }}\n          >\n            <option value=\"\">Select a locality</option>\n            <option value=\"Kashmere Gate\">Kashmere Gate</option>\n            <option value=\"Lal Quila\">Lal Quila</option>\n            <option value=\"Jama Masjid\">Jama Masjid</option>\n            <option value=\"Delhi Gate\">Delhi Gate</option>\n            <option value=\"ITO\">ITO</option>\n            <option value=\"Mandi House\">Mandi House</option>\n            <option value=\"Janpath\">Janpath</option>\n            <option value=\"Central Secretariat\">Central Secretariat</option>\n            <option value=\"Khan Market\">Khan Market</option>\n            <option value=\"Jawaharlal Nehru Stadium\">Jawaharlal Nehru Stadium</option>\n            <option value=\"Jangpura\">Jangpura</option>\n            <option value=\"Lajpat Nagar\">Lajpat Nagar</option>\n            <option value=\"Moolchand\">Moolchand</option>\n            <option value=\"Kailash Colony\">Kailash Colony</option>\n            <option value=\"Nehru Place\">Nehru Place</option>\n            <option value=\"Kalkaji Mandir\">Kalkaji Mandir</option>\n            <option value=\"Govind Puri\">Govind Puri</option>\n            <option value=\"Okhla\">Okhla</option>\n            <option value=\"Jasola\">Jasola</option>\n            <option value=\"Sarita Vihar\">Sarita Vihar</option>\n            <option value=\"Mohan Estate\">Mohan Estate</option>\n            <option value=\"Tughlakabad\">Tughlakabad</option>\n            <option value=\"Badarpur Border\">Badarpur Border</option>\n            <option value=\"Sarai\">Sarai</option>\n            <option value=\"N.H.P.C. Chowk\">N.H.P.C. Chowk</option>\n          </select>\n\n          <label style={{ marginBottom: \"10px\" }}>Select Doctor Type:</label>\n          <select\n            value={doctorType}\n            onChange={(e) => setDoctorType(e.target.value)}\n            style={{\n              padding: \"10px\",\n              marginBottom: \"20px\",\n              width: \"100%\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\",\n            }}\n          >\n            <option value=\"\">Select a doctor type</option>\n            <option value=\"Cardiologist\">Cardiologist</option>\n            <option value=\"Dentist\">Dentist</option>\n            <option value=\"Dermatologist\">Dermatologist</option>\n            <option value=\"General Physician\">General Physician</option>\n            <option value=\"Gynecologist\">Gynecologist</option>\n            <option value=\"Neurologist\">Neurologist</option>\n            <option value=\"Orthopedic\">Orthopedic</option>\n            <option value=\"Pediatrician\">Pediatrician</option>\n            <option value=\"Psychiatrist\">Psychiatrist</option>\n            <option value=\"Radiologist\">Radiologist</option>\n            <option value=\"ENT Specialist\">ENT Specialist</option>\n            <option value=\"Urologist\">Urologist</option>\n            <option value=\"Ophthalmologist\">Ophthalmologist</option>\n            <option value=\"Reproductive Endocrinologist\">Reproductive Endocrinologist</option>\n            <option value=\"Gastroenterologist\">Gastroenterologist</option>\n          </select>\n\n          <label style={{ marginBottom: \"10px\" }}>Enter Date:</label>\n          <input\n            type=\"date\"\n            value={date}\n            onChange={(e) => setDate(e.target.value)}\n            style={{\n              padding: \"10px\",\n              marginBottom: \"20px\",\n              width: \"100%\",\n              borderRadius: \"5px\",\n              border: \"1px solid #ccc\",\n            }}\n          />\n\n          <button\n            onClick={handleSearch}\n            style={{\n              padding: \"10px 20px\",\n              backgroundColor: \"#00b0ff\", // Light blue color\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n            }}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DoctorSearch;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\"; // Import Axios for API calls\nimport \"./AvailabilityEntry.css\"; // Ensure you have the CSS file for styling\n\nconst AvailabilityEntry = () => {\n  const [doctorId, setDoctorId] = useState(\"\"); // New state for doctor_id input\n  const [locationName, setLocationName] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [availableSlots, setAvailableSlots] = useState(10);\n  const [availableDate, setAvailableDate] = useState(\"\");\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate doctorId to make sure it's provided\n    if (!doctorId) {\n      alert(\"Please enter your Doctor ID\");\n      return;\n    }\n\n    // Prepare the data to be sent to the backend\n    const availabilityData = {\n      doctor_id: doctorId, // Use the input from the doctor\n      location_name: locationName,\n      address,\n      available_date: availableDate,\n      start_time: startTime,\n      available_slots: availableSlots,\n    };\n\n    // try {\n    //   const response = await axios.post(\n    //     \"http://localhost:5003/api/doctors/availability\",\n    //     availabilityData\n    //   );\n    try {\n      const response = await axios.post(\n        \"http://35.226.18.133:80/api/doctors/availability\", // Update with the correct external IP\n        availabilityData\n      );\n      if (response.data.success) {\n        alert(\"Availability successfully added!\");\n        setDoctorId(\"\");\n        setLocationName(\"\");\n        setAddress(\"\");\n        setStartTime(\"\");\n        setAvailableSlots(10);\n        setAvailableDate(\"\");\n        window.location.reload();\n      } else {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"Error saving availability\", error);\n      alert(\"Something went wrong! Please try again.\");\n    }\n  };\n\n  const handleLogout = () => {\n    navigate(\"/\"); // Navigate to the home page\n  };\n\n  const handleCheckBookings = () => {\n    navigate(\"/check-bookings\"); \n  };\n\n  return (\n    <div className=\"availability-entry-container\">\n      <div className=\"availability-box\">\n        <h2>Set Your Availability</h2>\n        <form onSubmit={handleSubmit}>\n          {/* Doctor ID Input */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter Doctor ID\"\n            value={doctorId}\n            onChange={(e) => setDoctorId(e.target.value)}\n            required\n          />\n\n          {/* Location Name Dropdown */}\n          <select\n            value={locationName}\n            onChange={(e) => setLocationName(e.target.value)}\n            required\n          >\n            <option value=\"\">Select Metro Station</option>\n            <option value=\"Kashmere Gate\">Kashmere Gate</option>\n            <option value=\"Lal Quila\">Lal Quila</option>\n            <option value=\"Jama Masjid\">Jama Masjid</option>\n            <option value=\"Delhi Gate\">Delhi Gate</option>\n            <option value=\"ITO\">ITO</option>\n            <option value=\"Mandi House\">Mandi House</option>\n            <option value=\"Janpath\">Janpath</option>\n            <option value=\"Central Secretariat\">Central Secretariat</option>\n            <option value=\"Khan Market\">Khan Market</option>\n            <option value=\"Jawaharlal Nehru Stadium\">Jawaharlal Nehru Stadium</option>\n            <option value=\"Jangpura\">Jangpura</option>\n            <option value=\"Lajpat Nagar\">Lajpat Nagar</option>\n            <option value=\"Moolchand\">Moolchand</option>\n            <option value=\"Kailash Colony\">Kailash Colony</option>\n            <option value=\"Nehru Place\">Nehru Place</option>\n            <option value=\"Kalkaji Mandir\">Kalkaji Mandir</option>\n            <option value=\"Govind Puri\">Govind Puri</option>\n            <option value=\"Okhla\">Okhla</option>\n            <option value=\"Jasola\">Jasola</option>\n            <option value=\"Sarita Vihar\">Sarita Vihar</option>\n            <option value=\"Mohan Estate\">Mohan Estate</option>\n            <option value=\"Tughlakabad\">Tughlakabad</option>\n            <option value=\"Badarpur Border\">Badarpur Border</option>\n            <option value=\"Sarai\">Sarai</option>\n            <option value=\"N.H.P.C. Chowk\">N.H.P.C. Chowk</option>\n          </select>\n        \n          {/* Other form fields */}\n          <input\n            type=\"text\"\n            placeholder=\"Enter the address\"\n            value={address}\n            onChange={(e) => setAddress(e.target.value)}\n            required\n          />\n          <input\n            type=\"date\"\n            placeholder=\"Available Date\"\n            value={availableDate}\n            onChange={(e) => setAvailableDate(e.target.value)}\n            required\n          />\n          <input\n            type=\"time\"\n            placeholder=\"Start Time\"\n            value={startTime}\n            onChange={(e) => setStartTime(e.target.value)}\n            required\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Available Slots\"\n            value={availableSlots}\n            onChange={(e) => setAvailableSlots(e.target.value)}\n            min=\"1\"\n            max=\"20\"\n            required\n          />\n          <button type=\"submit\">Save Availability</button>\n        </form>\n\n        {/* Add space between buttons */}\n        <div style={{ margin: \"20px 0\" }}></div>\n\n        {/* Logout Button */}\n        <button\n          onClick={handleLogout}\n          style={{\n            padding: \"10px\",\n            backgroundColor: \"#f44336\", // Red color for logout button\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            fontSize: \"16px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Logout\n        </button>\n\n        {/* Check Bookings Link */}\n        <button\n          onClick={handleCheckBookings}\n          style={{\n            marginTop: \"10px\",\n            padding: \"10px\",\n            backgroundColor: \"#007bff\", // Blue color for Check Bookings button\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            fontSize: \"16px\",\n            cursor: \"pointer\",\n            width: \"100%\",\n          }}\n        >\n          Check Bookings\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AvailabilityEntry;\n","\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst SearchResults = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [patientName, setPatientName] = useState(null);\n  const { state } = useLocation();\n  const navigate = useNavigate();\n\n  const fetchDoctors = useCallback(async () => {\n    try {\n      const response = await axios.post(\"http://localhost:5002/api/search/search\", {\n        locality: state.locality,\n        doctorType: state.doctorType,\n        date: state.date,\n      });\n\n      if (response.data.success) {\n        setDoctors(response.data.doctors);\n      } else {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      console.error(\"Error fetching doctors\", error);\n      alert(\"Something went wrong while fetching doctors.\");\n    }\n  }, [state.locality, state.doctorType, state.date]);\n\n  useEffect(() => {\n    const storedName = localStorage.getItem(\"patient_name\");\n    if (storedName) {\n      setPatientName(storedName);\n    }\n\n    fetchDoctors();\n  }, [fetchDoctors]);\n\n  const handleBookDoctor = async (doctorId, address, startTime) => {\n    const patientName = localStorage.getItem(\"patient_name\"); // Fetch patient name from localStorage\n\n    if (!patientName) {\n      alert(\"Patient name is missing. Please log in again.\");\n      return;\n    }\n\n    console.log(\"Booking attempt:\", {\n      doctor_id: doctorId,\n      patient_name: patientName,\n      address: address,\n      start_time: startTime,\n    });\n\n    // try {\n    //   const response = await axios.post(\"http://localhost:5002/api/booking/book\", {\n    //     doctor_id: doctorId,\n    //     patient_name: patientName, // Include patient name in the request\n    //     address: address,\n    //     start_time: startTime,\n    //   });\n    try {\n      const response = await axios.post(\n        \"http://173.255.116.177:80/api/booking/book\", // Update with the correct external IP\n        {\n          doctor_id: doctorId,\n          patient_name: patientName, // Include patient name in the request\n          address: address,\n          start_time: startTime,\n        }\n      );\n      if (response.data.success) {\n        alert(\"Doctor booked successfully!\");\n        fetchDoctors(); // Refresh updated slot count\n      } else {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      alert(\"Booking failed!\");\n      console.error(\"Error booking doctor\", error);\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.clear();\n    navigate(\"/\");\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          backgroundColor: \"#28a745\",\n          color: \"white\",\n          padding: \"10px 20px\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div style={{ fontWeight: \"bold\", fontSize: \"20px\" }}>\n          Hello, {patientName}!\n        </div>\n        <div>\n          <button\n            onClick={handleLogout}\n            style={{\n              backgroundColor: \"#007bff\",\n              color: \"white\",\n              padding: \"8px 16px\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Logout\n          </button>\n        </div>\n      </div>\n\n      <div style={{ padding: \"20px\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        {doctors.length > 0 ? (\n          doctors.map((doctor) => (\n            <div\n              key={`${doctor.doctor_id}-${doctor.start_time}`}\n              style={{\n                padding: \"20px\",\n                borderBottom: \"1px solid #ccc\",\n                marginBottom: \"20px\",\n                width: \"90%\",\n                maxWidth: \"500px\",\n                borderRadius: \"8px\",\n                boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n              }}\n            >\n              <h4>Doctor Name: {doctor.doctor_name}</h4>\n              <p>Specialization: {doctor.specialization}</p>\n              <p>Fees: ₹{doctor.consultation_fees}</p>\n              <p>Address: {doctor.address}</p>\n              <p>Nearest Metro Station: {doctor.nearest_metro_station}</p>\n              <p>Distance: {doctor.distance} km</p>\n              <p>\n                Available Date: {new Date(doctor.available_date).toLocaleDateString()}{\" \"}\n                <span style={{ marginLeft: \"20px\" }}>Start Time: {doctor.start_time}</span>\n              </p>\n              <p>Remaining Slots: {doctor.available_slots}</p>\n              <button\n                style={{\n                  backgroundColor: \"#007bff\",\n                  color: \"white\",\n                  padding: \"10px 20px\",\n                  border: \"none\",\n                  borderRadius: \"5px\",\n                  cursor: \"pointer\",\n                  alignSelf: \"flex-end\",\n                  marginTop: \"10px\",\n                }}\n                onClick={() =>\n                  handleBookDoctor(doctor.doctor_id, doctor.address, doctor.start_time)\n                }\n              >\n                Book Doctor\n              </button>\n            </div>\n          ))\n        ) : (\n          <p>No doctors found for your search criteria.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchResults;\n","import React, { useState } from \"react\";\nimport axios from \"axios\"; // Import Axios for API calls\nimport { useNavigate } from \"react-router-dom\";\n\nconst CheckBookings = () => {\n  const [doctorId, setDoctorId] = useState(\"\");\n  const [bookings, setBookings] = useState([]);\n  const [noBookingsFound, setNoBookingsFound] = useState(false);\n  const navigate = useNavigate();\n\n  const handleCheckBookings = async (e) => {\n    e.preventDefault();\n    if (!doctorId) {\n      alert(\"Please enter Doctor ID\");\n      return;\n    }\n    // try {\n    //   const response = await axios.post(\"http://localhost:5003/api/check-bookings\", {\n    //     doctor_id: doctorId,\n    //   });\n    try {\n      const response = await axios.post(\n        \"http://35.226.73.163:80/api/check-bookings\", // Update with the correct external IP\n        {\n          doctor_id: doctorId,\n        }\n      );\n\n      if (response.data.success) {\n        if (response.data.bookings.length === 0) {\n          setNoBookingsFound(true);\n        } else {\n          setBookings(response.data.bookings); // Set the bookings data to the state\n          setNoBookingsFound(false);\n        }\n      } else {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      alert(\"Failed to fetch bookings\");\n      console.error(\"Error fetching bookings:\", error);\n    }\n  };\n\n  const handleGoBack = () => {\n    navigate(\"/availability-entry\"); // Go back to the availability entry page\n  };\n\n  return (\n    <div className=\"check-bookings-container\" style={{ padding: \"20px\" }}>\n      {/* Doctor Bar */}\n      <div\n        style={{\n          backgroundColor: \"#FFB6C1\", // Light reddish-pink color\n          color: \"white\",\n          padding: \"10px 20px\",\n          textAlign: \"center\",\n        }}\n      >\n        <h2 style={{ margin: \"0\" }}>Hello Doctor</h2>\n      </div>\n\n      {/* Doctor ID Input and Button */}\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", marginTop: \"20px\" }}>\n        <form onSubmit={handleCheckBookings} style={{ width: \"300px\" }}>\n          <input\n            type=\"text\"\n            placeholder=\"Enter Doctor ID\"\n            value={doctorId}\n            onChange={(e) => setDoctorId(e.target.value)}\n            required\n            style={{\n              padding: \"10px\",\n              width: \"100%\",\n              borderRadius: \"5px\",\n              marginBottom: \"10px\",\n              border: \"1px solid #ccc\",\n            }}\n          />\n          <button\n            type=\"submit\"\n            style={{\n              padding: \"10px 20px\",\n              backgroundColor: \"#007bff\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n              cursor: \"pointer\",\n              width: \"100%\",\n            }}\n          >\n            Check Bookings\n          </button>\n        </form>\n\n        {/* Display Bookings or No bookings message */}\n        {noBookingsFound ? (\n          <p style={{ marginTop: \"20px\" }}>No bookings found for this doctor.</p>\n        ) : bookings.length > 0 ? (\n          <table style={{ marginTop: \"20px\", width: \"100%\", borderCollapse: \"collapse\" }}>\n            <thead>\n              <tr style={{ backgroundColor: \"#f2f2f2\" }}>\n                <th style={{ padding: \"10px\", border: \"1px solid #ddd\" }}>Patient Name</th>\n                <th style={{ padding: \"10px\", border: \"1px solid #ddd\" }}>Address</th>\n                <th style={{ padding: \"10px\", border: \"1px solid #ddd\" }}>Start Time</th>\n              </tr>\n            </thead>\n            <tbody>\n              {bookings.map((booking, index) => (\n                <tr key={index}>\n                  <td style={{ padding: \"10px\", border: \"1px solid #ddd\" }}>{booking.patient_name}</td>\n                  <td style={{ padding: \"10px\", border: \"1px solid #ddd\" }}>{booking.address}</td>\n                  <td style={{ padding: \"10px\", border: \"1px solid #ddd\" }}>{booking.start_time}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        ) : null}\n      </div>\n\n      {/* Go Back Button */}\n      <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n        <button\n          onClick={handleGoBack}\n          style={{\n            padding: \"10px 20px\",\n            backgroundColor: \"#f44336\", // Red color for logout button\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"5px\",\n            cursor: \"pointer\",\n            width: \"auto\",\n          }}\n        >\n          Go Back\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckBookings;\n","\n// import React from \"react\";\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import Home from \"./Pages/Home\";\n// import DoctorLogin from \"./Pages/DoctorLogin\";\n// import PatientLogin from \"./Pages/PatientLogin\";\n// import PatientSignup from \"./Pages/PatientSignup\";\n// import DoctorSearch from \"./Pages/DoctorSearch\";\n// import AvailabilityEntry from \"./Pages/AvailabilityEntry\"; // Import AvailabilityEntry page\n// import SearchResults from \"./Pages/SearchResults\"; // Import SearchResults page\n// import CheckBookings from \"./Pages/CheckBookings\"; // Import the CheckBookings page\n\n// function App() {\n//   return (\n//     <BrowserRouter>\n//       <Routes>\n//         <Route path=\"/\" element={<Home />} />\n//         <Route path=\"/doctor-login\" element={<DoctorLogin />} />\n//         <Route path=\"/patient-login\" element={<PatientLogin />} />\n//         <Route path=\"/patient-signup\" element={<PatientSignup />} />\n//         <Route path=\"/doctor-search\" element={<DoctorSearch />} />\n//         <Route path=\"/availability-entry\" element={<AvailabilityEntry />} />\n//         <Route path=\"/search-results\" element={<SearchResults />} />\n//         <Route path=\"/check-bookings\" element={<CheckBookings />} /> {/* Corrected route */}\n//       </Routes>\n//     </BrowserRouter>\n//   );\n// }\n\n// export default App;\nimport React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./Pages/Home\";\nimport DoctorLogin from \"./Pages/DoctorLogin\";\nimport PatientLogin from \"./Pages/PatientLogin\";\nimport PatientSignup from \"./Pages/PatientSignup\";\nimport DoctorSearch from \"./Pages/DoctorSearch\";\nimport AvailabilityEntry from \"./Pages/AvailabilityEntry\"; // Import AvailabilityEntry page\nimport SearchResults from \"./Pages/SearchResults\"; // Import SearchResults page\nimport CheckBookings from \"./Pages/CheckBookings\"; // Import the CheckBookings page\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/doctor-login\" element={<DoctorLogin />} />\n        <Route path=\"/patient-login\" element={<PatientLogin />} />\n        <Route path=\"/patient-signup\" element={<PatientSignup />} />\n        <Route path=\"/doctor-search\" element={<DoctorSearch />} />\n        <Route path=\"/availability-entry\" element={<AvailabilityEntry />} />\n        <Route path=\"/search-results\" element={<SearchResults />} />\n        <Route path=\"/check-bookings\" element={<CheckBookings />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}